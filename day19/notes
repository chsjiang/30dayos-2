day 19:
adding `type` command, like `cat` in linux, each file is stored at the head of a clustor, we can get the clustor number from file info, then use a fomula to get the address where the actual file is being stored, then just read 'size' bytes of data and write to screen
Adding file reading functionalities. Read a file to a chunk of memory, then we can either display it, or execute it.
Reading a file needs to parst the FAT(file allocation table) format desgined by microsoft, this is set in place by the imgmake tool.
fat (file allocation table) is a microsoft defined format to store file 
	fat table is auto generated by the img making tool
	file is not sotred consequtively, but stored by chunks of clustors each with 512 bytes.
	the clustors are to consequtive, meaning the first 512 bytes is clustor 0x01, the next might jump to 0x12
	therefore after reading the first clustor of a file, we need to check the fat table to find the next clustor to read
	
	since a floppy has 2880 clustors, it would need at least two bytes to represent them
		1 byte: 2^8 -1 = 255-> not enough!
		2 byte: 2^16 - 1 = 65535-> enough, but too much
	but 2 bytes is too much, microsoft invented a weird compression algorithm that crunches three clustor number into six bytes
		so each clustor number is represented by 1.5 byes
		1.5 byte: 2^12 - 1 = 4095-> enough
	the shufulling rule:
		'ab cd ef' would be read as 'dab efc'
	e.x 
		'03 40 00' means '003 004' -> that's two clustor number




When we want to execute a method that's not predefined in the program(knaming it's defined in a file that's built after the os), we need to execute as an application, we do this by read a file of byte code, and do farjmp to this code, we add a toy assembly program hlt.nas here. Note when doing farjmp, we are still in the console_task, farjmp to the new application will NOT occupy the predefined OS task

